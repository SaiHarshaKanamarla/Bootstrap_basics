BootStrap

install bootstrap using npm -- npm install bootstrap

or we can simply use bootstrap CDN which allows to import bootstrap libraries in the head.

When we include bootstrap in the worspace through CDN / npm , The default Bootstrap typography sets the font to Helvetica Neue and selects the appropriate font size based on the choice of the heading style and paragraph style for the content.

Responsive Design - users access websites with various devices with various screen resolutions. To render the webpage respective to that scenario, we use bootstrap. We must adapt to the users 'viewport'. 

Mobile first - First we must satisfy the mobile constraints. 

Grid System -- Bootstrap Grid System
Fluid Images
Media Queries

--- BootStrap Grid System --- it is designed to be responsive, mobile first and fluid.

ViewPort meta tag - <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> 

This viewport tag ensures that the screen width is set to the device width and the content is rendered with this width in mind.




CSS Flexbox Layout; -- Bootstrap uses this for its grid system.

Bootstrap grid works by applying the "container" class to the outermost div/layer. 
<div class="container"> -- this container allows the fixed width to allow expansion relative to the size of the screen.
<div class="container-fluid"> -- 

Inside the container, the content is laid out in the form of row
<div class="container">
	<div class="row">

	</div>
</div>  

Here the content is divided into multiple rows and then divided content is laid out as columns. The row that is generated will have 12 equal sized columns.
we can design the content to occupy any no. of the columns.


The bootstrap grids make 5 classes available to use.

default - extra small to extra large
sm - small
md - medium
lg - large
xl - extra large


we use the classes .col-*, .col-sm-*, .col-md-*, .col-lg-* for defining the layouts for various screen sizes.

Vertical Alignment -- 

<div class="row align-items-center"> -- The content is aligned based on the data that occupies the maximum height in the row.

Horizontal Alignment --

<div class="row justify-content-center"> --  the content is centered.

Column Offsets --  

offset-sm-1 - It is right shifted by 1 column.

Few Tags in the BootStrap Library that can be used in styling HTML elements.

container -- This is the principal tag this is required to style elements using bootstrap. Creates a literal container around the element lansdscape.
jumbotron -- used for headers in the webpage. creates a jumbo header for the header elements
<div class="col-12 col-sm-6"> -- This essentially means that inside the row, 12 columns are created as per understanding. the first col-12 corresponds to 
								 allocating all 12 columns of the row to the elements defined inside that div in xs devices and the next col-sm-6 corresponds to allocating 6 columns of the content enclosed by the said div tag for sm to xl devices. The order is xs, sm, md,lg,xl
align-items-center -- This ensures that all the elements in that enclosing div are aligned to the center

<div class="col-4 offset-1 col-sm-2"> -- The elements all are defined as the same. The offset-1 property ensures that one column spacing is given before the 										  rest of the content is rendered.
list-unstyled -- This element is used in lists. This ensures that the bullet points or numeric points created with <ul> and <ol> tags are removed.
align-self-center - The align-items property applies to all flex containers, and sets the default alignment of the flex items along the cross axis of each 						flex line. The align-self applies to all flex items, allows this default alignment to be overridden for individual flex items.



--------------------------------NAVIGATION AND NAVBAR-------------------------------------------

Components provided by bootstrap to include the navbar functionality are navbar and breadccrumbs

<nav class="navbar navbar-dark navbar-expand-sm bg-primary fixed-top">   
	This will essentially create a navbar in the body tag of the html page. navbar is a class which allows us to create a navbar. 
																			navbar-dark = a dark theme for navbar
																			navbar-expand-sm = observed while checking responsiveness
																			bg-primary = allots primary color defined in bs4 libraries -> blue in reality
																			fixed-top = allows us to fix the navbar at top. 
<a class="navbar-brand"></a> -- THis is used to store the logo																			

<a class="navbar-brand mr-auto" href="./index.html">Ristorante Con Fusion</a>  -- navbar-brand class allows us to define the brand name of the		
																				  the website. This usually consists of the brand logo that can be used to
																				  direct the users to the home page of the application.

<div class="collapse navbar-collapse" id='Navbar'>
                <ul class="navbar-nav mr-auto list-unstyled">
                    <li class="nav-item active"><a href="./index.html" class="nav-link">Home</a></li>
                    <li class="nav-item"><a href="about.html" class="nav-lsink">About</a></li>
                    <li class="nav-item"><a href="#" class="nav-link">Menu</a></li>
                    <li class="nav-item"><a href="#" class="nav-link">Contact</a></li>
                </ul>
            </div>																				  

In the above description, the navbar-collapse allows us to create a collapsible navbar for lower end devices.
The ul is used to create the contents in the navbar. The navbar-nav helps us define the navigable elements of the header.
The nav-item class allows us to define the INDIVIDUAL ITEM/MENU of the navbar.
The active in the nav-item allows us to highlight the menu we are supposedly on
The nav-link enables us to establish that this is a link that can be used to navigate around.			

----------------------------------ICON FONTS-------------------------------------------

These are a set of symbols and glyphs. They can be used and styled like regular fonts.
they are a lightweight replacement for simple graphics.

Font-Awesome - It is a package we use to introduce fonts to the webpage

They can be utilized as <i class="fa fa-phone"></i>
If we want to include various social options, we can make use of bootstrap-social.css in the project.

To install the ICON FONTS feature in the webpage.. we must install both font-awesome using npm install font-awesome 
and then install bootstrap-social using npm as well.

Then once, installed using npm, as expected a folder will be created in node_modules. Then we must import them into the head tag like this<link rel="stylesheet" href="node_modules/font-awesome/css/font-awesome.min.css">
 
 <link rel="stylesheet" href="node_modules/font-awesome/css/font-awesome.min.css">
 <link rel="stylesheet" href="node_modules/bootstrap-social/bootstrap-social.css">

To add an icon font in the webpage, we can use the font-awesome [fa] class in conjunction with span and fa-"predefined icon name"
to include icons to the menus.
Eg, <span class="fa fa-home">Home</span>

To add the social media links in the webpage we need to use to both font-awesome fa and bootstrap social

	<a class="btn btn-social-icon btn-google" href="http://google.com/+"><span class="fa fa-google-plus"></span></a>


------------------------------------------USER INPUT : BUTTONS AND FONTS---------------------------------------------------

<div class="btn-group" role="group">
                    <a role="button" class="btn btn-primary" href="tel:+4186431516"><span class="fa fa-phone"> Call</span></a> <!-- btn primary creates a dark blue button -->
                    <a role="button" class="btn btn-info"><span class="fa fa-skype"> Skype</span></a> <!-- btn-info creates a light blue color button-->
                    <a role="button" class="btn btn-success" href="mailto:harsha.sai018@gmail.com"><span class="fa fa-envelope"> Email</span></a> <!-- btn-success creates a light green color button-->
                </div>

In the given piece of code...we added button with bootstrap styling. Here, the 

btn-group -- is a bootstrap class that helps us define buttons as a group.
btn - adds basic styling to the button
btn-primary - makes the button dark blue
btn-info - makes the button light blue
btn-sucess - makes the button green


For further reference, use this link ""https://www.w3schools.com/bootstrap/bootstrap_ref_css_buttons.asp""

<form>
<div class="form-group row">
                        <label for="firstname" class="col-md-2 col-form-label">FirstName</label>
                        <div class="col-md-10">
                            <input type="text" class="form-control" id="firstname" name="firstname" placeholder="Enter your First Name">
                        </div>
                    </div>

In the above code snippet , we are creating a single element for a form. We enclose all such tags within a <form> </form> tags.
The class form-group allows us to create various form elements that are grouped together in the form.
<label> is the standard html tag that helps us create a label for a text
and then, we define the entire text within a form-group classin conjunction with row, => a single row will have label and input

We can create a myriad of input tags with this technique.



----------------------------------------BOOTSTRAP TABLES--------------------------------------

BootStrap Card - This is a component that allows us to highlight content in myriad ways.

 <div class="row row-content">
        <div class="col-12 col-sm-9">
            <h2> Facts & Figures </h2>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead class="thead-dark">

In the above code-snippet, we add the row and row-content classes to align the content in the parent container properly
the class table-responsive ensure we have a responsive design when we scale the website
class="table table-striped" -- the bootstrap table class overrides the basic table functionality and table-striped allows us to create a table with a striped design
thead-dark -- this enables the header of the table to be dark

<div class="col-12 col-sm-6">
                <div class="card">
                    <h3 class="card-header bg-primary text-white">Facts At a Glance</h3>
                    <div class="card-body">
                        <dl class="row">

Above is the code snippet for card. class=card allows us to create a card in the body
the card-header defines the bootstrap header for the card. bg-primary set a blue color to the head element.
bg-primary is predefined with white.
card-body enables us to define the content of the card within.

Here, we use the dl and dt tags --> description list, description terms..Just a way of formatting that data.